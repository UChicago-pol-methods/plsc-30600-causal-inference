setwd("C:/Users/cuadr/OneDrive/Escritorio/UCHICAGO/8. Causal Inference/plsc-30600-causal-inference/labs/lab 6")
knitr::opts_chunk$set(echo = TRUE)
# clean memory
rm(list = ls())
# use packages
library(tidyverse)
library(haven) # to read Stata files
library(ggrepel) # label points on R
library(AER) # package for IV regression
library(ivmodel) # package for IV with one endogenous variable
# get working directory
data_path <- paste0(dirname(getwd()), "/lab6/")
# read data
fig1_dta <- read_dta(paste0(data_path, "maketable3.dta"))
setwd("C:/Users/cuadr/OneDrive/Escritorio/UCHICAGO/8. Causal Inference/plsc-30600-causal-inference/labs/lab 6")
knitr::opts_chunk$set(echo = TRUE)
# clean memory
rm(list = ls())
# use packages
library(tidyverse)
library(haven) # to read Stata files
library(ggrepel) # label points on R
library(AER) # package for IV regression
library(ivmodel) # package for IV with one endogenous variable
# get working directory
data_path <- paste0(dirname(getwd()), "/lab6/")
# read data
fig1_dta <- read_dta("maketable3.dta")
# read data
fig1_dta <- read_dta("maketable3.dta")
# make figure
fig1_dta %>% ggplot(aes(x = logem4, y = logpgp95)) +
geom_point() +
geom_smooth(method="lm", formula = y ~ x) +
xlab("Log of Settler Mortality") +
xlim(3, 8) +
ylab("Log GDP Per Capita, PPP, 1995")
# read data
fig2_dta <- read_dta("maketable2.dta")
# make figure
fig2_dta %>% ggplot(aes(x = avexpr, y = logpgp95)) +
geom_point() +
geom_smooth(method="lm", formula = y ~ x) +
geom_text_repel(aes(label = shortnam), size = 3) +
xlab("Average Expropriation Risk 1985-95") +
xlim(3, 10) +
ylab("Log GDP Per Capita, PPP, 1995")
# read data
fig3_dta <- read_dta("maketable3.dta")
# make figure
fig3_dta %>% ggplot(aes(x = avexpr, y = logem4)) +
geom_point() +
geom_smooth(method="lm", formula = y ~ x) +
xlab("Log of Settler Mortality") +
xlim(3, 10) +
ylab("Average Expropriation Risk 1985-95")
# read data
tab4_dta <- read_dta("maketable4.dta")
tab4_dta_full <- tab4_dta[complete.cases(tab4_dta),]
# use ivmodel package to reproduce IV estimates
outcome <- as.numeric(tab4_dta$logpgp95)
treatment <- as.numeric(tab4_dta$avexpr)
instrument <- as.numeric(tab4_dta$logem4)
ajr_iv_ivmodel <- ivmodel(Y = outcome, D = treatment, Z = instrument)
ajr_iv_ivmodel
# use AER package to reproduce IV estimates
ajr_iv_aer <- ivreg(logpgp95 ~ avexpr | logem4, data = tab4_dta)
summary(ajr_iv_aer)
ajr_iv_aer_coef <- ivreg(logpgp95 ~ avexpr | logem4,
data = tab4_dta)$coefficients[2]
# set seed to make results replicable
set.seed(60637)
# create bootstrap vector
n_iteration <- 5000
iv_boot <- rep(NA, n_iteration)
# bootstrap iteration
for(i in 1:n_iteration){
# resample with replacement
tab4_dta_boot <- tab4_dta[sample(1:nrow(tab4_dta),
nrow(tab4_dta),
replace=T),]
# run iv model using AER package with the bootstrap data
iv <- ivreg(logpgp95 ~ avexpr | logem4, data = tab4_dta_boot)$coefficients[2]
iv_boot[i] <- iv
}
# display bootstrap standard error and associated confidence interval
boot_iv_se <- sd(iv_boot)
boot_iv_se
c(ajr_iv_aer_coef - qnorm(.975)*boot_iv_se,
ajr_iv_aer_coef + qnorm(.975)*boot_iv_se)
# bootstrap percentile method
quantile(iv_boot, c(0.025, 0.975))
# compare with the CI from AER package
c(ajr_iv_aer_coef - qnorm(.975)*0.1250,
ajr_iv_aer_coef + qnorm(.975)*0.1250)
knitr::opts_chunk$set(echo = TRUE)
path <- "C:/Users/cuadr/OneDrive/Escritorio/UCHICAGO/4. Harris classes/4th quarter/Economic Development/Problem Sets/PS2"
GDP <- read.csv(file.path(path, "GDP_2019.csv"))
MPI <- read_excel(file.path(path, "MPI_2022.xlsx"))
library(tidyverse)
library(readxl)
library(stringr)
path <- "C:/Users/cuadr/OneDrive/Escritorio/UCHICAGO/4. Harris classes/4th quarter/Economic Development/Problem Sets/PS2"
GDP <- read.csv(file.path(path, "GDP_2019.csv"))
MPI <- read_excel(file.path(path, "MPI_2022.xlsx"))
GDP_new <- GDP %>% select("Country.Name", "X2019..YR2019.")
MPI_new <- MPI %>% select("Country", "MPI", "PPP $1.90 a day (2009-2021)", "Survey period")
GDP_new %>%
mutate(Country.Name = recode(Country.Name, ))
path <- "C:/Users/cuadr/OneDrive/Escritorio/UCHICAGO/4. Harris classes/4th quarter/Economic Development/Problem Sets/PS2"
GDP <- read.csv(file.path(path, "GDP_2021.csv"))
MPI <- read_excel(file.path(path, "MPI_2022.xlsx"))
View(GDP)
GDP <- read.csv(file.path(path, "GDP_2021.csv"))
View(GDP)
GDP <- read.csv(file.path(path, "GDP_2021.csv", quote = "\\\""))
GDP_2021 <- read_csv("C:/Users/cuadr/OneDrive/Escritorio/UCHICAGO/4. Harris classes/4th quarter/Economic Development/Problem Sets/PS2/GDP 2021/GDP_2021.csv",
quote = "\\\"")
View(GDP_2021)
GDP_2021_NEW <- read_excel("C:/Users/cuadr/OneDrive/Escritorio/UCHICAGO/4. Harris classes/4th quarter/Economic Development/Problem Sets/PS2/GDP_2021_NEW.xls",
sheet = "Data")
View(GDP_2021_NEW)
GDP_2021 <- read_excel(file.path(path, "GDP_2021_NEW.xls"))
View(GDP_2021)
View(MPI)
GDP_new <- GDP_2021 %>% select("Country Name", "2021")
MPI_new <- MPI %>% select("Country", "MPI", "PPP $1.90 a day (2009-2021)", "Survey period")
View(GDP_new)
# Renaming GDP_new to join with MPI_new
GDP_new$Country.Name <- str_replace(GDP_new$Country.Name, "Congo, Dem. Rep.", "Congo (Democratic Republic of the)")
# Renaming GDP_new to join with MPI_new
GDP_new$Country.Name <- str_replace(GDP_new$'Country Name', "Congo, Dem. Rep.", "Congo (Democratic Republic of the)")
# Renaming GDP_new to join with MPI_new
GDP_new$Country.Name <- str_replace(GDP_new$'Country Name', "Congo, Dem. Rep.", "Congo (Democratic Republic of the)")
GDP_new$Country.Name <- str_replace(GDP_new$'Country Name', "Cote d'Ivoire", "CÃ´te d'Ivoire")
GDP_new$Country.Name <- str_replace(GDP_new$'Country Name', "Gambia, The", "Gambia")
GDP_new$Country.Name <- str_replace(GDP_new$'Country Name', "Lao PDR", "Lao People's Democratic Republic")
GDP_new$Country.Name <- str_replace(GDP_new$'Country Name', "Egypt, Arab Rep.", "Egypt")
GDP_new$Country.Name <- str_replace(GDP_new$'Country Name', "Kyrgyz Republic", "Kyrgyzstan")
GDP_new$Country.Name <- str_replace(GDP_new$'Country Name', "Vietnam", "Viet Nam")
GDP_new$Country.Name <- str_replace(GDP_new$'Country Name', "Congo, Rep.", "Congo")
GDP_new$Country.Name <- str_replace(GDP_new$'Country Name', "St. Lucia", "Saint Lucia")
# Joining datasets. Cube, Palestine, South Sudan, Yemen excluded from WB database
MPI_GDP <- MPI_new %>% left_join(GDP_new, c("Country" = "Country Name"))
nrow(MPI_GDP)
View(MPI_GDP)
# Cleaning merged tibble
MPI_GDP_final <- MPI_GDP %>%
rename(GDP_PPP = "2021",
PPP_1.90 = 'PPP $1.90 a day (2009-2021)') %>%
mutate(GDP_PPP = as.numeric(GDP_PPP),
PPP_1.90 = as.numeric(PPP_1.90),
Poor = ifelse(MPI >= 0.33, "Multidimensionally poor (MPI >= 0.33)",
"Multidimensionally not poor (MPI < 0.33)")) %>%
filter(!is.na(c(PPP_1.90))) %>%
filter(!is.na(c(GDP_PPP)))
MPI_GDP_final
# Final plot
MPI_GDP_final %>%
ggplot(aes(x = GDP_PPP, y = MPI, size = PPP_1.90)) +
geom_point(colour = "cyan4") +
labs(title = "Multidimensional Poverty Index vs 2019 GDP Per Capita, PPP.
Countries measured by % population with less than $1.90 per day",
caption = "Source: World Bank - UNDP - University of Oxford, 2022",
x = "GDP per Capita, PPP (constant 2017, international $)",
y = "Multidimensional Poverty Index - MPI") +
theme(plot.title = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
legend.position = c(0.93, 0.78)) +
facet_wrap(vars(Poor), scales = "free", strip.position = "top", nrow = 1)
# Final plot
MPI_GDP_final %>%
ggplot(aes(x = GDP_PPP, y = MPI, size = PPP_1.90)) +
geom_point(colour = "cyan4") +
labs(title = "MPI vs 2019 GDP Per Capita
Countries measured by % population with less than $1.90 per day",
caption = "Source: World Bank - UNDP - University of Oxford, 2022",
x = "GDP per capita (current US$)",
y = "Multidimensional Poverty Index - MPI") +
theme(plot.title = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
legend.position = c(0.93, 0.78)) +
facet_wrap(vars(Poor), scales = "free", strip.position = "top", nrow = 1)
# Final plot
MPI_GDP_final %>%
ggplot(aes(x = GDP_PPP, y = MPI, size = PPP_1.90)) +
geom_point(colour = "cyan4") +
labs(title = "MPI vs 2019 GDP per capita
Countries measured by average population share with less than $1.90 per day (2009-2021)",
caption = "Source: World Bank - UNDP - University of Oxford, 2022",
x = "GDP per capita (current US$)",
y = "Multidimensional Poverty Index - MPI") +
theme(plot.title = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
legend.position = c(0.93, 0.78)) +
facet_wrap(vars(Poor), scales = "free", strip.position = "top", nrow = 1)
# Final plot
MPI_GDP_final %>%
ggplot(aes(x = GDP_PPP, y = MPI, size = PPP_1.90)) +
geom_point(colour = "cyan4") +
labs(title = "MPI vs 2021 GDP per capita
Countries measured by average population share with less than $1.90 per day (2009-2021)",
caption = "Source: World Bank - UNDP - University of Oxford, 2022",
x = "GDP per capita (current US$)",
y = "Multidimensional Poverty Index - MPI") +
theme(plot.title = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
legend.position = c(0.93, 0.78)) +
facet_wrap(vars(Poor), scales = "free", strip.position = "top", nrow = 1)
# Joining datasets. Cube, Palestine, South Sudan, Yemen excluded from WB database
MPI_GDP <- MPI %>% left_join(GDP_new, c("Country" = "Country Name"))
# Final plot
MPI_GDP_final %>%
ggplot(aes(x = GDP_PPP, y = MPI, size = PPP_1.90)) +
geom_point(colour = "cyan4") +
labs(title = "MPI vs 2021 GDP per capita
Countries measured by average population share with less than $1.90 per day (2009-2021)",
caption = "Source: World Bank - UNDP - University of Oxford, 2022",
x = "GDP per capita (current US$)",
y = "Multidimensional Poverty Index - MPI") +
theme(plot.title = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
legend.position = c(0.93, 0.78)) +
facet_wrap(vars(Poor), scales = "free", strip.position = "top", nrow = 2)
# Final plot
MPI_GDP_final %>%
ggplot(aes(x = GDP_PPP, y = MPI, size = PPP_1.90)) +
geom_point(colour = "cyan4") +
labs(title = "MPI vs 2021 GDP per capita
Countries measured by average population share with less than $1.90 per day (2009-2021)",
caption = "Source: World Bank - UNDP - University of Oxford, 2022",
x = "GDP per capita (current US$)",
y = "Multidimensional Poverty Index - MPI") +
theme(plot.title = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
legend.position = c(0.93, 0.78)) +
facet_wrap(vars(Poor), scales = "free", strip.position = "top", nrow = 1)
